name: Codecov

on:
  push:

jobs:
  coverage:
    runs-on: ubuntu-latest
    container: perl:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cpanm --quiet --notest Module::Build Devel::Cover Devel::Cover::Report::Codecov

      - name: Run tests and generate coverage report
        run: |
          find t/ -name '*.t' -exec perl -MDevel::Cover {} \;

      - name: List files in directory
        run: ls ./loftee/cover_db/runs/1697604175.2275.65168

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./loftee/cover_db/runs/1697604175.2275.65168  # 请将此目录修改为实际的覆盖率文件目录
          flags: unittests
          file: ./loftee/cover_db/runs/1697604175.2275.65168/coverage.json  # 请将此路径修改为实际的覆盖率文件路径
          verbose: true
          clean: false
  
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: ./loftee/cover_db/runs/1697603745.2273.29042
      #     root: ./loftee
      #     flags: unittests
      #     verbose: true

                
      # - name: Install dependencies
      #   run: cpanm --quiet --notest Module::Build Devel::Cover Devel::Cover::Report::Codecov

    # - name: Configure and build
    #   run: |
    #       if [ -f "perl Makefile.PL" ]; then
    #         perl Makefile.PL
    #         make
    #       elif [ -f "perl Build.PL" ]; then
    #         perl Build.PL
    #         ./Build
    #       elif [ -f "configure" ]; then
    #         ./configure
    #         make
    #       else
    #         echo "No build script found!"
    #         exit 1
    #       fi

    #   - name: Run tests and generate coverage report
    #     run: cover -test -report codecov
    #     env:
    #       CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}